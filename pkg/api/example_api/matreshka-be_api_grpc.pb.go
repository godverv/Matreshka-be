// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.25.1
// source: grpc/matreshka-be_api.proto

package example_api

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	MatreshkaBeAPI_Version_FullMethodName = "/matreshka_be_api.MatreshkaBeAPI/Version"
)

// MatreshkaBeAPIClient is the client API for MatreshkaBeAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type MatreshkaBeAPIClient interface {
	Version(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error)
}

type matreshkaBeAPIClient struct {
	cc grpc.ClientConnInterface
}

func NewMatreshkaBeAPIClient(cc grpc.ClientConnInterface) MatreshkaBeAPIClient {
	return &matreshkaBeAPIClient{cc}
}

func (c *matreshkaBeAPIClient) Version(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := c.cc.Invoke(ctx, MatreshkaBeAPI_Version_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MatreshkaBeAPIServer is the server API for MatreshkaBeAPI service.
// All implementations must embed UnimplementedMatreshkaBeAPIServer
// for forward compatibility
type MatreshkaBeAPIServer interface {
	Version(context.Context, *PingRequest) (*PingResponse, error)
	mustEmbedUnimplementedMatreshkaBeAPIServer()
}

// UnimplementedMatreshkaBeAPIServer must be embedded to have forward compatible implementations.
type UnimplementedMatreshkaBeAPIServer struct {
}

func (UnimplementedMatreshkaBeAPIServer) Version(context.Context, *PingRequest) (*PingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Version not implemented")
}
func (UnimplementedMatreshkaBeAPIServer) mustEmbedUnimplementedMatreshkaBeAPIServer() {}

// UnsafeMatreshkaBeAPIServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to MatreshkaBeAPIServer will
// result in compilation errors.
type UnsafeMatreshkaBeAPIServer interface {
	mustEmbedUnimplementedMatreshkaBeAPIServer()
}

func RegisterMatreshkaBeAPIServer(s grpc.ServiceRegistrar, srv MatreshkaBeAPIServer) {
	s.RegisterService(&MatreshkaBeAPI_ServiceDesc, srv)
}

func _MatreshkaBeAPI_Version_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MatreshkaBeAPIServer).Version(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MatreshkaBeAPI_Version_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MatreshkaBeAPIServer).Version(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// MatreshkaBeAPI_ServiceDesc is the grpc.ServiceDesc for MatreshkaBeAPI service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var MatreshkaBeAPI_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "matreshka_be_api.MatreshkaBeAPI",
	HandlerType: (*MatreshkaBeAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Version",
			Handler:    _MatreshkaBeAPI_Version_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc/matreshka-be_api.proto",
}
